/// <reference types="node" />
/// <reference types="node" />
/// <reference types="node" />
import * as http2 from "http2";
import * as http from "http";
import * as https from "https";
import type { UniversalClientFn } from "@bufbuild/connect/protocol";
/**
 * Options for creating an UniversalClientFn using the Node.js `http`, `https`,
 * or `http2` module.
 */
export type NodeHttpClientOptions = {
    /**
     * Use the Node.js `http` or `https` module.
     */
    httpVersion: "1.1";
    /**
     * Options passed to the request() call of the Node.js built-in
     * http or https module.
     */
    nodeOptions?: Omit<http.RequestOptions, "signal"> | Omit<https.RequestOptions, "signal">;
} | {
    /**
     * Use the Node.js `http2` module.
     */
    httpVersion: "2";
    /**
     * Base URI for all HTTP requests.
     *
     * Requests will be made to <baseUrl>/<package>.<service>/method
     *
     * Example: `baseUrl: "https://example.com/my-api"`
     *
     * This will make a `POST /my-api/my_package.MyService/Foo` to
     * `example.com` via HTTPS.
     */
    baseUrl: string;
    /**
     * Options passed to the connect() call of the Node.js built-in
     * http2 module.
     */
    nodeOptions?: http2.ClientSessionOptions | http2.SecureClientSessionOptions;
    /**
     * By default, HTTP/2 sessions are terminated after each request.
     * Set this option to true to keep sessions alive across multiple
     * requests.
     */
    keepSessionAlive?: boolean;
};
/**
 * Create a universal client function, a minimal abstraction of an HTTP client,
 * using the Node.js `http`, `https`, or `http2` module.
 *
 * @private Internal code, does not follow semantic versioning.
 */
export declare function createNodeHttpClient(options: NodeHttpClientOptions): UniversalClientFn;
